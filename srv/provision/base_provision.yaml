- name: base_provision
  hosts: all
  become: true
  tasks:
  
    - name: create user
      ansible.builtin.user:
        name: "{{ item.name }}"
        groups: "{{ item.groups }}"
        password: "{{ item.password | password_hash('sha512') }}"
        shell: "{{ item.shell | default('/bin/bash') }}" 
        state: present
      loop: "{{ user }}"
        

    - name: add ssh keys
      authorized_key:
        user: "{{ item.name }}"
        state: present
        key: "{{ lookup('file', '/home/{{ item.name }}/.ssh/id_rsa.pub') }}"
      loop: "{{ user }}"

    - name: update file /etc/hosts
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "{{hostvars[item].ansible_facts.eth1.ipv4.address}} {{hostvars[item].ansible_hostname}}"
      loop: "{{groups['all']}}"

    - name: check {{ disk }} 
      ansible.builtin.stat:
        path: "{{ disk }}"
      register: disk_stat

    - name: check if {{ mount_path }} exist
      ansible.builtin.stat:
        path: "{{ mount_path }}"
      register: mount

    - name: check if {{ disk }} exist in /etc/fstab
      ansible.builtin.shell:
        "grep {{ label_disk }} /etc/fstab 2 >/dev/null" 
      register: fstab_result
      ignore_errors: true

    - name: create new partition on disk {{ disk }}
      community.general.parted:
        device: "{{ disk }}"
        number: 1
        state: present
        fs_type: xfs 
        label: gpt
      when: disk_stat.stat.exists is true  and disk_stat.stat.isblk is true

    - name: Create a {{ filesystem }} filesystem on {{ disk }}
      community.general.filesystem:
        fstype: "{{ filesystem }}"
        dev: "{{ disk }}"
        opts: "-L {{ label_disk }}"
        state: present

    - name: create {{ mount_path }}
      ansible.builtin.file:
        path: "{{ mount_path }}"
        owner: vlad
        group: vlad
        state: directory
      when: not mount.stat.exists

    - name: Mount disk {{ disk  }} by path {{ mount_path }}
      ansible.posix.mount:
        path: "{{ mount_path }}"
        src: "LABEL={{ label_disk }}"
        fstype: "{{ filesystem }}"
        state: present
      when: fstab_result.rc != 0
        
    



      