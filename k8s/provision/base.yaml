- name: install dependence
  hosts: all
  become: true
  tasks:
    - name: set timezone
      community.general.timezone:
        name: Europe/Moscow

    - name: Disable ufw
      service:
         name: ufw
         state: stopped
         enabled: no     
    
    - name: add k8s apt key
      ansible.builtin.apt_key:
        url: "{{ k8s_url }}"
        state: present
        
    - name: add k8s repo
      ansible.builtin.apt_repository:
        repo: "{{ k8s_repo }}"
        state: present
        filename: 'kubernetes'
    
    - name: add url for containerd
      ansible.builtin.apt_key:
        url: "{{ docker_url }}"
        state: present
        validate_certs: no

    - name: add repo
      ansible.builtin.apt_repository:
        repo:  "{{ docker_repo }}"
        state: present
    
    - name: install req software
      ansible.builtin.apt:
        name: "{{ soft_dependences }}"
        state: present
       
        
    - name: Install kubernetes python package
      ansible.builtin.pip:
        name:  "{{ pip_modules }}"

    
    - name: update containerd to 1.7
      ansible.builtin.unarchive:
        src: "{{ containerd_url }}"
        dest: /usr/
        remote_src: yes
   
    - name: update config containerd
      ansible.builtin.shell:
        containerd config default | sudo tee /etc/containerd/config.toml
      notify: restart containerd
        
    - name: disable swap 
      ansible.builtin.shell:
        swapoff -a

    - name: remove swaw from fstab
      ansible.builtin.lineinfile:
        dest: /etc/fstab
        regexp: swap
        state: absent
    
    - name: Configure persistent loading of modules
      ansible.builtin.blockinfile:
         create: true
         path: /etc/modules-load.d/k8s.conf
         block: |
             overlay
             br_netfilter

    - name: load module
      community.general.modprobe:
        name: "{{ item }}"
        state: present
      loop: "{{ modules }}"

    - name: set proc parametr
      ansible.builtin.blockinfile:
        path: /etc/sysctl.d/k8s.conf
        create: true
        block: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1

    - name: reload syctl parametrs
      ansible.builtin.shell:
        sysctl --system

    - name: bashrc edit
      ansible.builtin.blockinfile:  
        dest: /home/{{ name }}/.bashrc
        block: |
          source <(kubectl completion bash)
          alias k=kubectl
          complete -o default -F __start_kubectl k
      notify: restart service

  handlers:
     - name: start service
       ansible.builtin.service:
        name: kubelet
        state: started
        enabled: true

     - name: restart service
       ansible.builtin.service:
        name: kubelet
        state: restarted
        enabled: true

     - name: restart containerd
       ansible.builtin.service:
        name: containerd
        state: restarted
        enabled: true