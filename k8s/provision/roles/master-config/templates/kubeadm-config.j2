# https://kubernetes.io/docs/reference/config-api/kubeadm-config.v1beta4/#kubeadm-k8s-io-v1beta3-InitConfiguration
apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
bootstrapTokens:
- groups:
  - system:bootstrappers:kubeadm:default-node-token
  ttl: 24h0m0s
  usages:
  - signing
  - authentication
localAPIEndpoint:
  advertiseAddress: {{ hostvars[groups['master'][0]].ansible_facts.eth1.ipv4.address }}
  bindPort: 6443
nodeRegistration:
  criSocket: unix:///var/run/containerd/containerd.sock
  imagePullPolicy: IfNotPresent
  name: {{ ansible_hostname }}
  taints: null
  kubeletExtraArgs:
    - name: node-ip
      value: {{ ansible_facts.eth1.ipv4.address}}
timeouts:
  controlPlaneComponentHealthCheck: 4m0s
  discovery: 5m0s
  etcdAPICall: 2m0s
  kubeletHealthCheck: 4m0s
  kubernetesAPICall: 1m0s
  tlsBootstrap: 5m0s
  upgradeManifests: 5m0s
  
---
# https://kubernetes.io/docs/reference/config-api/kubeadm-config.v1beta4/#kubeadm-k8s-io-v1beta4-ClusterConfiguration
apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
certificatesDir: /etc/kubernetes/pki
clusterName: {{ kube_domain_name }}
etcd:
  local:
    dataDir: /var/lib/etcd
imageRepository: registry.k8s.io
apiServer:
  extraArgs:
  - name: service-cluster-ip-range
    value: {{ serviceSubnet }}
  - name: feature-gates
    value: "AllowUnsafeMalformedObjectDeletion=True"
kubernetesVersion: v{{ kubernetesVersion }}.{{ kubernetesSubversion }}
{% if ha_enabled == true %}
controlPlaneEndpoint: {{ vip_address }}:{{ vip_port}}
{% else %}
controlPlaneEndpoint: {{ ansible_facts.eth1.ipv4.address}}:6443
{% endif %}
networking:
  dnsDomain: {{ kube_domain_name}}
  serviceSubnet: {{ serviceSubnet }}
  podSubnet: {{ podSubnet }}
controllerManager: 
  extraArgs:
    - name: bind-address
      value: 0.0.0.0
scheduler:
  extraArgs:
    - name: bind-address
      value: 0.0.0.0
    
---
# https://kubernetes.io/docs/reference/config-api/kube-proxy-config.v1alpha1/
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: {{ podSubnet }}
metricsBindAddress: 0.0.0.0:10249
{% if kubeproxy_mode_ipvs == true %}
mode: ipvs 
ipvs:
  strictARP: True
{% else %}
mode: iptables
{% endif %}

---
# https://kubernetes.io/docs/reference/config-api/kubelet-config.v1beta1/
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
cgroupDriver: "systemd"
{% if nodelocaldns == true %}
clusterDNS:
- {{ nodelocaldns_address }}
{% endif %}
{% if system_reserved is defined and system_reserved == true %}
systemReserved:
{% if system_memory is defined %}
  memory: {{ system_memory }}
{% endif %}
{% if system_cpu is defined %}
  cpu: {{ system_cpu }}
{% endif %}
{% if system_ephemeral_storage is defined %}
  ephemeral-storage: {{ system_ephemeral_storage }}
{% endif %}
{% endif %}
{% if container_log_max_size is defined %}
containerLogMaxSize: {{ container_log_max_size }}
{% endif %}
{% if container_log_max_file is defined %}
containerLogMaxFiles: {{ container_log_max_file }}
{% endif %}