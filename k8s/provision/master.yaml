- name: config master
  ignore_errors: true
  hosts: master[0]
  tasks:
    
    - name: check if cluster are running
      ansible.builtin.shell:
        ps -aux | grep kube-api | grep -v grep
      register: isrunning
      ignore_errors: true

    - name: init cluster
      block:
      #  - name: add kube-vip 
      #    ansible.builtin.template:
      #     src: "{{ kube_vip_template }}"
      #     dest: /etc/kubernetes/manifests/kube-vip.yaml
       
       - name: import k8s images
         ansible.builtin.shell:
            kubeadm config images pull

       - name: copy template kubeadm
         ansible.builtin.template:
          src: "{{ kubeadm_temlate }}"
          dest: "{{ kubeadm_config }}"
        
       - name: kubeadm init
         ansible.builtin.shell:
           kubeadm init --config "{{ kubeadm_config }}" 

      #  - name: kubeadm init
      #    ansible.builtin.shell:
      #      kubeadm init --pod-network-cidr={{  }} --control-plane-endpoint={{ vip_address }} --apiserver-advertise-address={{ ansible_facts.eth1.ipv4.address }}
      when: isrunning.rc != 0

    - name: create .kube directory
      ansible.builtin.file:
        path: "{{ home_kube_dir }}"
        state: directory
        owner: "{{ name }}"
        group: "{{ name }}"

    - name: copy conf to .kube directory
      ansible.builtin.copy:
        src: "{{ base_kube_conf_dir }}"
        dest: /home/{{ name }}/.kube/config
        remote_src: true
        owner: "{{ name }}"
        group: "{{ name }}"
    
    - name: check if pod network exist
      become: false
      ansible.builtin.shell: kubectl get namespaces calico-system
      register: network_exist

    - name: install calico 
      block:
       
        - name: download network operator
          ansible.builtin.uri:
            url: "{{network_operator}}"
            dest: ~/network_operator.yaml

        - name: install calico network operator
          kubernetes.core.k8s:
             src: ~/network_operator.yaml
             state: present
        
        - name: install calico network
          kubernetes.core.k8s:
             template: "{{ custom_resource_temlate_dir }}"
             state: present
      become: false
      when: network_exist.rc != 0

   

    - name: check if localdns exist
      ansible.builtin.shell:
         kubectl get pod -n kube-system 
      register: pod_output
      become: false
     
    - name: install localdns
      block:
         - name: get kube-dns ip
           kubernetes.core.k8s:
              api_version: v1
              kind: service
              name: kube-dns
              namespace: kube-system
           register: kube_dns

         - name: create localdns
           kubernetes.core.k8s:
             template: "{{ localdns_config }}"
             state: present
      when: "'node-local-dns' not in pod_output.stdout_lines | join(',')"
      become: false




        
        
    
      
    