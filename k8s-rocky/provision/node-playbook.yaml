- name: config node
  hosts: node
  become: true
  ignore_errors: true
  tasks:
    - name: set timezone
      community.general.timezone:
        name: Europe/Moscow

    - name: update file /etc/hosts
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "{{hostvars[item].ansible_host}} {{ item }}"
      loop: "{{groups.all}}"

    - name: add repo for k8s
      ansible.builtin.yum_repository:
        name: kubernetes
        description: soft for k8s
        baseurl:
          - "{{ kubernetes_repo }}"
        gpgkey:
          - "{{ kubernetes_gpg_key }}"
        enabled: true
        gpgcheck: true
        state: present

    - name: add repo for containerd
      ansible.builtin.yum_repository:
        name: containerd
        description: soft for CRI
        baseurl:
          - https://download.docker.com/linux/centos/$releasever/$basearch/stable
        gpgkey:
          - https://download.docker.com/linux/centos/gpg
        enabled: true
        gpgcheck: true
        state: present

    - name: install packages
      ansible.builtin.yum:
        name: "{{ soft_for_install }}"
        state: present
        update_cache: true
     
    - name: start iscsid
      ansible.builtin.service:
        name: iscsid
        state: started
        enabled: true
    
    - name: Configure node ip
      lineinfile:
        path: /etc/sysconfig/kubelet
        line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
      # notify:
      #   - restart kubelet
    - name: restart kubelet
      ansible.builtin.service:
        name: kubelet
        state: restarted
        enabled: true
    

    - name: Install kubernetes python package
      ansible.builtin.pip:
        name:  "{{ pip_modules }}"

    - name: disable firewall
      ansible.builtin.service:
        name: firewalld
        state: stopped
        enabled: false

    - name: Disable SELinux
      ansible.posix.selinux:
        state: disabled
    
    - name: load module
      community.general.modprobe:
        name: "{{ item }}"
        state: present
      loop: "{{ modules }}"

    - name: make module persistent
      ansible.builtin.lineinfile:
        path: /etc/modules-load.d/modules.conf 
        line: "{{ item }}"
        create: yes
      loop: "{{ modules }}"


    - name: set sysctl parametrs
      ansible.posix.sysctl:
        name:  "{{ item }}"
        state: present
        value: "1" 
        reload: true
      loop: "{{ sysctl_param }}"

    - name: set vm.max_map_count in 262144
      ansible.posix.sysctl:
        name: vm.max_map_count
        state: present
        value: "262144"
        reload: true
  
    - name: disable swap 
      ansible.builtin.shell:
        swapoff -a

    - name: remove swaw from fstab
      ansible.builtin.lineinfile:
        dest: /etc/fstab
        regexp: swap
        state: absent

    # - name: config containerd
    - name: update config containerd
      ansible.builtin.shell: |
        containerd config default | sudo tee /etc/containerd/config.toml
        sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
      # notify: 
      #  - restart containerd
    - name: restart containerd
      ansible.builtin.systemd:
        name: containerd
        state: restarted
        daemon_reload: true
        enabled: true



    

# # edit bashrc
#     - name: bashrc edit
#       ansible.builtin.blockinfile:  
#         dest: /home/vagrant/.bashrc
#         block: |
#           source <(kubectl completion bash)
#           alias k=kubectl
#           complete -o default -F __start_kubectl k

- name: master config
  ignore_errors: true
  hosts: master1
  gather_facts: no
  become: true
  tasks:

    - name: get node list
      ansible.builtin.shell: kubectl get node -o json | jq '.items[].metadata.name'
      register: node_list
      become: false

    - name: set fact
      ansible.builtin.set_fact:
        node_list: "{{ node_list.stdout_lines | join(',') }}"

    - name: get token for joinnig pod
      ansible.builtin.shell:
        kubeadm token create --print-join-command
      register: kube_join_token
 
    - name: set fact
      ansible.builtin.set_fact:
        join_command: "{{kube_join_token.stdout}}"
    

- name: config node
  hosts: node
  gather_facts: no
  become: true
  tasks:
      
    - name: add node
      ansible.builtin.shell: "{{ hostvars['master1'].join_command }}"
      when:  ansible_hostname not in  hostvars['master1'].node_list

  

         

 
       

 